import sqlalchemy as db
from sqlalchemy.orm import relationship, backref
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.sql import func

Base = declarative_base()

class Author(Base):
    __tablename__ = 'authors'

    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String)
    created_at = db.Column(db.DateTime, default=func.now())
    updated_at = db.Column(db.DateTime, default=func.now(), onupdate=func.now())
    books = relationship("Book", backref="author")

class Book(Base):
    __tablename__ = 'books'

    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String)
    author_id = db.Column(db.Integer, db.ForeignKey('authors.id'))


# Create a new author
author1 = Author(name='J.K. Rowling')

# Add the author to the session and commit the changes
session.add(author1)
session.commit()

# Update the author's name
author1.name = 'Joanne Rowling'

# Commit the changes to update the author's row and update the 'updated_at' timestamp
session.commit()
